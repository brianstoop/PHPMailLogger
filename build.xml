<project name="PhpMailer-Logger" default="build" basedir=".">

    <property name="system" value="src/Stellr" />
    <property name="tests" value="tests" />
    <property name="coding_standard" value="/var/www/libs/Stellr_Coding_Standard"/>

    <target name="clean"
            description="Cleanup and create build directories">
        <delete dir="${basedir}/build" />

        <mkdir dir="${basedir}/build/api" />
        <mkdir dir="${basedir}/build/code-browser" />
        <mkdir dir="${basedir}/build/coverage" />
        <mkdir dir="${basedir}/build/logs" />
        <mkdir dir="${basedir}/build/pdepend" />

        <touch file="${basedir}/build/logs/phpstan.xml" mkdirs="true" verbose="true" />
    </target>

    <target name="parallelTasks"
            description="Run the pdepend, phpcpd, phpcs, phpdoc and phploc tasks in parallel using a maximum of 2 threads.">
       <parallel threadCount="2">
            <sequential>
                <antcall target="pdepend"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs"/>
            <antcall target="phpstan-ci"/>
            <antcall target="phploc"/>
        </parallel>
    </target>

    <target name="pdepend"
            description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
            <arg path="${system}" />
        </exec>
    </target>

    <target name="phpunit"
            description="Run unit tests with PHPUnit">
        <exec executable="phpunit" failonerror="true">
            <arg value="-c" />
            <arg path="tests/phpunit.xml" />
            <arg value="--verbose" />
        </exec>
    </target>

    <target name="phpcs"
            description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs">
            <arg value="--report-full" />
            <arg value="--report-checkstyle=${basedir}/build/logs/checkstyle.xml" />
            <arg value="--standard=${coding_standard}/Stellr/" />
            <arg value="--ignore=html\.*" />
            <arg value="--ignore=*.local.inc.php" />
            <arg path="${system}" />
        </exec>
    </target>

    <target name="phpcbf"
            description="Fixing coding standard violations using PHP_CodeSniffer. Intended for usage on the command line before committing.">
        <exec executable="phpcbf">
            <arg value="--standard=${coding_standard}/Stellr/" />
            <arg value="--ignore=html\.*" />
            <arg value="--ignore=*.local.inc.php" />
            <arg path="${system}" />
        </exec>
    </target>

    <target name="phpcpd"
            description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd" />
            <arg value="${basedir}/build/logs/pmd-cpd.xml" />
            <arg path="${system}" />
        </exec>
    </target>

    <target name="phploc"
         description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--log-csv" />
            <arg value="${basedir}/build/logs/phploc.csv" />
            <arg value="--count-tests" />
            <arg path="${system}" />
        </exec>
    </target>

    <target name="phpstan"
            description="Analyse code with PHPStan">
        <exec executable="phpstan">
            <env key="XDEBUG_MODE" value="off"/>
            <arg value="analyse" />
            <arg path="${basedir}/src" />
            <arg value="-c" />
            <arg value="${basedir}/tests/phpstan.neon.dist" />
            <arg value="--level" />
            <arg value="9" />
            <arg value="--no-progress" />
            <arg value="--no-interaction" />
        </exec>
    </target>

    <target name="phpstan-ci"
            description="Analyse code with PHPStan">
        <exec executable="phpstan" output="${basedir}/build/logs/phpstan.xml">
            <env key="XDEBUG_MODE" value="off"/>
            <arg value="analyse" />
            <arg path="${basedir}/src" />
            <arg value="-c" />
            <arg value="${basedir}/tests/phpstan.neon.dist" />
            <arg value="--level" />
            <arg value="9" />
            <arg value="--error-format" />
            <arg value="checkstyle" />
            <arg value="--no-progress" />
            <arg value="--no-interaction" />
        </exec>
    </target>

    <target name="dependencies">
        <exec executable="decomposer">
            <arg value="install"/>
            <arg value="--no-dev" />
        </exec>
    </target>

    <target name="dev-dependencies">
        <exec executable="decomposer">
            <arg value="install"/>
        </exec>
    </target>

    <target name="setup"
            description="Setup runtime environment"
            depends="dependencies">
    </target>

    <target name="dev-setup"
            description="Setup runtime environment"
            depends="clean,dev-dependencies">
    </target>

    <target name="build" depends="clean,parallelTasks,phpunit" />
</project>
